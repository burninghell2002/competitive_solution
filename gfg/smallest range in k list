#include<bits/stdc++.h>
using namespace std;
#define N 1000


 // } Driver Code Ends
// you are required to complete this function 
// function should print the required range
class Solution{
    public:
    pair<int,int> findSmallestRange(int arr[][N], int n, int k){
          priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>q;
          
          int maxi = INT_MIN;
          
          for(int i = 0;i<k;i++){
              q.push({arr[i][0],{i,0}});
              maxi = max(maxi,arr[i][0]);
          }
          
          int range = INT_MAX;
          pair<int,int> ans ;
          
          while(1){
              pair<int,pair<int,int>> temp = q.top();
              int min = temp.first;
              int i = temp.second.first;
              int j = temp.second.second;
              q.pop();
              if(maxi-min < range){
                  range = maxi-min;
                  ans = make_pair(min,maxi);
              }
              
              if(j+1 < n){
                  q.push({arr[i][j+1],{i,j+1}});
                  if(arr[i][j+1] > maxi){
                      maxi = arr[i][j+1];
                  }
              }
              else{
                  break;
              }
              
          }
          
      return ans;   
    }
     
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, k;
        cin>>n>>k;
        int arr[N][N];
        pair<int,int> rangee;
        for(int i=0; i<k; i++)
            for(int j=0; j<n; j++)
                cin>>arr[i][j];
        Solution obj;
	    rangee = obj.findSmallestRange(arr, n, k);
	    cout<<rangee.first<<" "<<rangee.second<<"\n";
    }   
	return 0;
}

  // } Driver Code Ends
